import Head from 'next/head';
import React, { useState, useEffect } from 'react';
import Header from '../components/header';
import Footer from '../components/footer';
import Details from '../components/details';
import Video from '../components/video';
import CustomSelect from '../components/custom-select';
import ProductCard from '../components/product-card';
import Modal from '../components/modal';
import { sortProducts } from '../utils';
import { productData, DEFAULT_SORT_ORDER } from '../constants';
import styles from '../styles/Home.module.css';
import type { ProductCardProps } from '../components/product-card';

type StaticProps = {
  poductItems: ProductCardProps[];
};

export default function Home(props: StaticProps) {
  const { poductItems } = props;
  const [sortOrder, setSortOrder] = useState(DEFAULT_SORT_ORDER);
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [activeProductID, setActiveProductID] = useState('');
  const [isMessageShown, setIsMessageShown] = useState(false);
  const products = sortProducts(poductItems, sortOrder);
  const activeProduct = products.find(
    ({ id }: ProductCardProps) => id === activeProductID
  );

  useEffect(() => {
    setIsMessageShown(true);
  }, [sortOrder]);

  useEffect(() => {
    if (activeProductID) {
      setIsModalOpen(true);
    }
  }, [activeProductID]);

  useEffect(() => {
    let timer: ReturnType<typeof setTimeout>;
    if (isMessageShown) {
      timer = setTimeout(() => {
        setIsMessageShown(false);
      }, 4000);
    }

    return () => {
      clearTimeout(timer);
    };
  }, [isMessageShown]);

  const selectProduct = (id: string) => {
    setActiveProductID(id);
  };

  const handleCloseModal = () => {
    setIsModalOpen(false);
    setActiveProductID('');
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Svetlana Terentieva Homework</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <Header />

      <main className={styles.main}>
        <h1 className={styles.visuallyHidden}>Все для котов</h1>
        <section
          className={styles.contentSection}
          aria-labelledby='goodsHeading'
          role='region'
        >
          <h2 className={styles.sectionHeading} id='goodsHeading'>
            Товары для котов
          </h2>
          <CustomSelect handleSelectOrder={(order) => setSortOrder(order)} />
          {isMessageShown && (
            <span
              role='status'
              aria-live='polite'
              className={styles.visuallyHidden}
            >
              Товары отсортированы
            </span>
          )}
          <ul className={styles.catalogList}>
            {products.map(
              ({
                id,
                imgSrc,
                imgAlt,
                productName,
                likes,
                price,
                oldPrice,
              }: ProductCardProps) => (
                <li className={styles.catalogListItem} key={id}>
                  <ProductCard
                    id={id}
                    imgSrc={`/${imgSrc}`}
                    imgAlt={imgAlt}
                    productName={productName}
                    price={price}
                    oldPrice={oldPrice}
                    likes={likes}
                    handler={(id) => selectProduct(id)}
                  />
                </li>
              )
            )}
          </ul>
          <Modal
            handleClose={handleCloseModal}
            isShown={isModalOpen}
            product={activeProduct}
          />
        </section>

        <Video />
        <Details />
      </main>

      <Footer />
    </div>
  );
}

// This function gets called at build time on server-side.
// It won't be called on client-side, so you can even do
// direct database queries.
export async function getStaticProps() {
  const poductItems = productData;

  return {
    props: {
      poductItems,
    },
  };
}
